import requests
import random
import string
from multiprocessing import Process, Value, Lock
from math import pow
log = open("log.txt", 'w')

# URL we are going to brute values after
baseURL = ""

# Why not gather statistic
attempts = 0
failed = 0
worked = 0

# Bruting function
def parse(attempts, failed, worked, attemptLock, failedLock, workedLock):
    while 1:
        with attemptLock:
            attempts.value += 1 # Statistics!

        # Choosing a random URL to brute
        testURL = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in range(16))
        r = requests.get(baseURL+testURL)

        # The error message generated by this particular website
        failCase = ''

        #Check if the received matches the error message, log appropriately
        if not r.text== failCase:
            log.write(testURL + '\n')
            with workedLock:
                worked.value += 1
        else:
            with failedLock:
                failed.value += 1

        with workedLock:
            with attemptLock:
                print(str(worked.value) + '/' + str(attempts.value))

attempts = Value('i', 0)
failed = Value('i', 0)
worked = Value('i', 0)

# Construct locks:
attemptLock = Lock()
failedLock = Lock()
workedLock = Lock()

# Generate processes
procs = [Process(target=parse, args=(attempts, failed, worked, attemptLock, failedLock, workedLock)) for i in range(15)]

# Start spinning
for p in procs:
    p.start()

# Now we wait
for p in procs:
    p.join()
